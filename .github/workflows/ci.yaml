name: Build and Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
  pull_request:

jobs:
  build:
    name: Build Snap
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install required dependencies
        run: |
          sudo snap install yq

      - name: Upgrade linux deps
        run: |
          sudo apt-get update
          
          # install security updates
          sudo apt-get -s dist-upgrade \
            | grep "^Inst" \
            | grep -i securi \
            | awk -F " " {'print $2'} \
            | xargs sudo apt-get install -y
          
          sudo apt-get autoremove -y
          sudo apt-get clean -y
          sudo snap refresh snapd

      - id: build-snap
        name: Build snap
        uses: snapcore/action-build@v1
        with:
          snapcraft-channel: 8.x/stable

      - name: Upload built snap job artifact
        uses: actions/upload-artifact@v3
        with:
          name: wazuh-dashboard_snap_amd64
          path: "wazuh-dashboard_*.snap"

  test:
    name: Test Snap
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Upgrade snapd
        run: |
          sudo snap refresh snapd

      - name: Setup the required system configs Wazuh Indexer
        run: |
          sudo snap install wazuh-indexer --channel=4/edge --devmode --revision=2
          sudo snap connect wazuh-indexer:process-control

          sudo sysctl -w vm.swappiness=0
          sudo sysctl -w vm.max_map_count=262144
          sudo sysctl -w net.ipv4.tcp_retries2=5

      - name: Connect required interfaces for Wazuh Indexer
        run: |
          sudosnap connect wazuh-indexer:log-observe
          sudosnap connect wazuh-indexer:mount-observe
          sudosnap connect wazuh-indexer:process-control
          sudosnap connect wazuh-indexer:system-observe
          sudosnap connect wazuh-indexer:sys-fs-cgroup-service
          sudosnap connect wazuh-indexer:shmem-perf-analyzer

      - name: Setup and Start Wazuh Indexer
        run: |
          # create the certificates
          sudo snap run wazuh-indexer.setup \
              --node-name cm0 \
              --node-roles cluster_manager,data \
              --tls-priv-key-root-pass root1234 \
              --tls-priv-key-admin-pass admin1234 \
              --tls-priv-key-node-pass node1234 \
              --tls-init-setup yes                 # this creates the root and admin certs as well.

          # start wazuh-indexer
          sudo snap start wazuh-indexer.daemon

          # wait a bit for it to fully initialize
          sleep 60s

          # create the security index
          sudo snap run wazuh-indexer.security-init --tls-priv-key-admin-pass=admin1234

      - name: Download snap file for Wazuh Dashboard
        uses: actions/download-artifact@v3
        with:
          name: wazuh-dashboard_snap_amd64
          path: .

      - name: Install snap file for Wazuh Dashboard
        run: |
          version="$(yq .version < snap/snapcraft.yaml)"
          
          sudo snap install wazuh-dashboard_${version}_amd64.snap --dangerous --jailmode

      - name: Test Wazuh Dashboard
        run: |
          sudo snap start wazuh-dashboard

          # Wait until the service esteblishes
          service_unavailable=$(curl -i http://localhost:5601 \
            --connect-timeout 5 \
            --retry 5 \
            --retry-delay 5 \
            --retry-max-time 60 \
            --retry-connrefused  | grep "302 Found")
          if [ ! "$service_unavailable" ]; then
            echo "ERROR: Service unavailable. Aborting..." >&2
            exit 1
          fi

          # Attempt to access the interface using valid authentication
          authenticate_ok=$(curl -i  -k -XPOST http://localhost:5601/auth/login \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'osd-xsrf:true' \
            -d '{"username":"kibanaserver","password":"kibanaserver"}' | grep "200 OK") 

          if [ ! "$authenticate_ok" ]; then
            echo "ERROR: Authentication failed with correct credentials. Aborting..." >&2
            exit 1
          fi

          # Attempt to access the interface wrongly authenticated
          wrong_credentials_fail=$(curl -i  -k -XPOST http://localhost:5601/auth/login \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'osd-xsrf:true' \
            -d '{"username":"admin","password":"test"}' | grep "401 Unauthorized") 

          if [ ! "$wrong_credentials_fail" ]; then
            echo "ERROR: Authentication allowed with wrong credentials. Aborting..." >&2
            exit 1
          fi

          # Check if logs are collected as expected
          logfile="/var/snap/wazuh-dashboard/common/var/log/wazuh-dashboard/opensearch_dashboards.log"
          if ! sudo test -s "${logfile}"; then
            echo "ERROR: Logfile unaccessible. Aborting..." >&2
            exit 1
          fi

      - name: Test Prometheus Exporter
        run: |
          URL=http://localhost:9684/metrics

          # Wait until the service esteblishes
          exporter_ok=$(curl -i ${URL} \
            --connect-timeout 5 \
            --retry 5 \
            --retry-delay 5 \
            --retry-max-time 60 \
            --retry-connrefused  | grep "200 OK")
          if [ ! "$exporter_ok" ]; then
            echo "ERROR: Prometheus exporter unavailable (connected to OSD on HTTP). Aborting..." >&2
            exit 1
          fi

          echo "Successfully connected to the Exporter service"

          sudo snap set wazuh-dashboard scheme=https
          sudo snap restart wazuh-dashboard
          sleep 10 

          # Wait until the service esteblishes
          exporter_ok=$(curl -i ${URL} \
            --connect-timeout 5 \
            --retry 5 \
            --retry-delay 5 \
            --retry-max-time 60 \
            --retry-connrefused  || true )
          if [ "$exporter_ok" ]; then
            echo "ERROR: Prometheus exporter available when it should be connecting to a non-existent service. Aborting..." >&2
            exit 1
          fi

          echo "Exporter was down when it was supposed to be"

          # Wrong setting defaults to HTTP
          sudo snap set wazuh-dashboard scheme=httpblabla
          sudo snap restart wazuh-dashboard
          sleep 10

          # Wait until the service esteblishes
          exporter_ok=$(curl -i ${URL} \
            --connect-timeout 5 \
            --retry 5 \
            --retry-delay 5 \
            --retry-max-time 60 \
            --retry-connrefused  | grep "200 OK")
          if [ ! "$exporter_ok" ]; then
            echo "ERROR: Prometheus exporter unavailable (connected to OSD on HTTP). Aborting..." >&2
            exit 1
          fi

          echo "Snap defaults correctly applied as Exporter settings"

      - name: Test Logs slot
        run: |
          logs_slot_avail=$(sudo snap connections wazuh-dashboard | grep wazuh-dashboard:logs)

          if [ ! "$logs_slot_avail" ]; then
            echo "ERROR: Logs slot is not available. Aborting..." >&2
            exit 1
          fi
